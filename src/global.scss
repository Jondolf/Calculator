/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
@import '~@ionic/angular/css/core.css';

/* Basic CSS for apps built with Ionic */
@import '~@ionic/angular/css/normalize.css';
@import '~@ionic/angular/css/structure.css';
// @import '~@ionic/angular/css/typography.css';
@import '~@ionic/angular/css/display.css';

/* Optional CSS utils that can be commented out */
@import '~@ionic/angular/css/padding.css';
@import '~@ionic/angular/css/float-elements.css';
@import '~@ionic/angular/css/text-alignment.css';
@import '~@ionic/angular/css/text-transformation.css';
@import '~@ionic/angular/css/flex-utils.css';

$screen-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px
) !default;

@each $keySize, $valueSize in $screen-breakpoints {
  [hidden-#{$keySize}] {
    @media (min-width: $valueSize) {
      display: none;
    }
  }
}

@each $keySize, $valueSize in $screen-breakpoints {
  [visible-block-#{$keySize}] {
    @media (min-width: $valueSize) {
      display: block;
    }
  }
}

* {
  --ion-font-family: 'Nunito Sans', 'Lucida Sans', sans-serif;
  font-family: var(--ion-font-family);
  caret-color: var(--ion-color-light-contrast);

  ::selection {
    background-color: var(--ion-color-secondary);
    color: var(--ion-color-secondary-contrast);
  }
}

body,
html {
  margin: 0;
  padding: 0;
  min-height: 100%;
  height: 100%;
  background-color: var(--ion-color-light);
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: 'Nunito', 'Nunito Sans', 'Lucida Sans', sans-serif;
}

button,
input {
  font-family: 'Nunito Sans', 'Lucida Sans', sans-serif;
  border: none;
  outline: none;
}

ion-button {
  text-transform: none;
}

app-math-buttons .math-buttons {
  .math-button-primary {
    background-color: rgba(var(--ion-color-light-shade-rgb), 0.6) !important;
    color: var(--ion-color-light-contrast) !important;
  }

  .math-button-secondary {
    background-color: rgba(var(--ion-color-secondary-rgb), 0.6) !important;
    color: var(--ion-color-secondary-contrast) !important;
  }

  .math-button-tertiary {
    background-color: rgba(var(--ion-color-tertiary-rgb), 0.6) !important;
    color: var(--ion-color-tertiary-contrast) !important;
  }

  .lg-text {
    font-size: 4.5vh !important;
  }

  .md-text {
    font-size: 4vh !important;
  }

  .sm-text {
    font-size: 2.5vh !important;
  }
}

// To avoid white on white and black on black
.light.pure-white,
.dark.pure-black {
  ion-range {
    --ion-color-base: var(--ion-color-light-contrast) !important;
  }
  ion-radio {
    --color: var(--ion-color-light-contrast);
    --color-checked: var(--ion-color-light-contrast);
  }
}

.options-popover .popover-content {
  background-color: var(--ion-color-light-tint);
  padding: 0;
  overflow: hidden;
  ion-button {
    --ion-color-base: var(--ion-color-light-contrast) !important;
  }
  .list {
    padding: 0;
    background-color: transparent;
  }
}

.alert-wrapper {
  --background: var(--ion-color-light-tint);
  .alert-radio-label {
    color: var(--ion-color-light-contrast) !important;
  }
}

.calculator-customize-buttons-modal {
  --background: transparent;
}

.light.pure-white,
.dark.pure-black {
  * {
    caret-color: var(--ion-color-light-contrast);
  }

  .math-buttons button {
    border-color: rgba(var(--ion-color-light-contrast-rgb), 0.25) !important;
  }

  .alert-wrapper {
    border: 1px solid var(--ion-color-light-contrast);

    .alert-radio-icon {
      border-color: var(--ion-color-light-contrast) !important;
    }

    .alert-radio-inner {
      background-color: var(--ion-color-light-contrast);
    }

    .alert-button {
      color: var(--ion-color-light-contrast);
    }
  }
}
